package com.melvinbur.archmagica.core.block;


import net.minecraft.core.BlockPos;



import net.minecraft.world.level.BlockGetter;

import net.minecraft.world.level.block.*;
import net.minecraft.world.level.block.state.BlockState;



import net.minecraft.world.level.material.PushReaction;
import net.minecraft.world.phys.shapes.BooleanOp;
import net.minecraft.world.phys.shapes.CollisionContext;
import net.minecraft.world.phys.shapes.Shapes;
import net.minecraft.world.phys.shapes.VoxelShape;

import java.util.stream.Stream;


public class MagicCrystal3Block extends CaveCoverBlock {



    public MagicCrystal3Block(Properties properties) {
        super(properties);



    }


    private static final VoxelShape SHAPE_N = Stream.of(
            Block.box(6.849999999999999, 6.5, 12.049999999999997, 9.149999999999999, 9.699999999999985, 14.350000000000007),
            Block.box(6.049999999999999, -1.6999999999999993, 6.0499999999999945, 9.95, 16.9, 10.049999999999994),
            Block.box(6.549999999999999, 16.9, 6.449999999999994, 9.45, 22.999999999999993, 9.549999999999994),
            Block.box(1.0500000000000052, -1.700000000000001, 6.0499999999999945, 4.95000000000001, 6.399999999999997, 10.049999999999994),
            Block.box(6.049999999999999, -1.700000000000001, 1.0499999999999936, 9.95, 6.399999999999997, 5.0500000000000025),
            Block.box(6.049999999999999, -1.700000000000001, 11.24999999999999, 9.95, 6.399999999999997, 15.249999999999961),
            Block.box(11.249999999999996, -1.700000000000001, 6.0499999999999945, 15.149999999999991, 6.399999999999997, 10.049999999999994),
            Block.box(6.849999999999999, 6.5, 1.8499999999999934, 9.149999999999999, 9.699999999999985, 4.0500000000000025),
            Block.box(1.7499999999999991, 6.5, 6.95000000000001, 4.049999999999999, 9.699999999999985, 9.150000000000018),
            Block.box(12.15, 6.5, 6.9499999999999815, 14.450000000000001, 9.699999999999985, 9.14999999999999)
    ).reduce((v1, v2) -> Shapes.join(v1, v2, BooleanOp.OR)).get();

    private static final VoxelShape SHAPE_W = Stream.of(
            Block.box(6.849999999999999, 6.5, 12.049999999999997, 9.149999999999999, 9.699999999999985, 14.350000000000007),
            Block.box(6.049999999999999, -1.6999999999999993, 6.0499999999999945, 9.95, 16.9, 10.049999999999994),
            Block.box(6.549999999999999, 16.9, 6.449999999999994, 9.45, 22.999999999999993, 9.549999999999994),
            Block.box(1.0500000000000052, -1.700000000000001, 6.0499999999999945, 4.95000000000001, 6.399999999999997, 10.049999999999994),
            Block.box(6.049999999999999, -1.700000000000001, 1.0499999999999936, 9.95, 6.399999999999997, 5.0500000000000025),
            Block.box(6.049999999999999, -1.700000000000001, 11.24999999999999, 9.95, 6.399999999999997, 15.249999999999961),
            Block.box(11.249999999999996, -1.700000000000001, 6.0499999999999945, 15.149999999999991, 6.399999999999997, 10.049999999999994),
            Block.box(6.849999999999999, 6.5, 1.8499999999999934, 9.149999999999999, 9.699999999999985, 4.0500000000000025),
            Block.box(1.7499999999999991, 6.5, 6.95000000000001, 4.049999999999999, 9.699999999999985, 9.150000000000018),
            Block.box(12.15, 6.5, 6.9499999999999815, 14.450000000000001, 9.699999999999985, 9.14999999999999)
    ).reduce((v1, v2) -> Shapes.join(v1, v2, BooleanOp.OR)).get();

    private static final VoxelShape SHAPE_E = Stream.of(
            Block.box(6.849999999999999, 6.5, 12.049999999999997, 9.149999999999999, 9.699999999999985, 14.350000000000007),
            Block.box(6.049999999999999, -1.6999999999999993, 6.0499999999999945, 9.95, 16.9, 10.049999999999994),
            Block.box(6.549999999999999, 16.9, 6.449999999999994, 9.45, 22.999999999999993, 9.549999999999994),
            Block.box(1.0500000000000052, -1.700000000000001, 6.0499999999999945, 4.95000000000001, 6.399999999999997, 10.049999999999994),
            Block.box(6.049999999999999, -1.700000000000001, 1.0499999999999936, 9.95, 6.399999999999997, 5.0500000000000025),
            Block.box(6.049999999999999, -1.700000000000001, 11.24999999999999, 9.95, 6.399999999999997, 15.249999999999961),
            Block.box(11.249999999999996, -1.700000000000001, 6.0499999999999945, 15.149999999999991, 6.399999999999997, 10.049999999999994),
            Block.box(6.849999999999999, 6.5, 1.8499999999999934, 9.149999999999999, 9.699999999999985, 4.0500000000000025),
            Block.box(1.7499999999999991, 6.5, 6.95000000000001, 4.049999999999999, 9.699999999999985, 9.150000000000018),
            Block.box(12.15, 6.5, 6.9499999999999815, 14.450000000000001, 9.699999999999985, 9.14999999999999)
    ).reduce((v1, v2) -> Shapes.join(v1, v2, BooleanOp.OR)).get();

    private static final VoxelShape SHAPE_S = Stream.of(
            Block.box(6.849999999999999, 6.5, 12.049999999999997, 9.149999999999999, 9.699999999999985, 14.350000000000007),
            Block.box(6.049999999999999, -1.6999999999999993, 6.0499999999999945, 9.95, 16.9, 10.049999999999994),
            Block.box(6.549999999999999, 16.9, 6.449999999999994, 9.45, 22.999999999999993, 9.549999999999994),
            Block.box(1.0500000000000052, -1.700000000000001, 6.0499999999999945, 4.95000000000001, 6.399999999999997, 10.049999999999994),
            Block.box(6.049999999999999, -1.700000000000001, 1.0499999999999936, 9.95, 6.399999999999997, 5.0500000000000025),
            Block.box(6.049999999999999, -1.700000000000001, 11.24999999999999, 9.95, 6.399999999999997, 15.249999999999961),
            Block.box(11.249999999999996, -1.700000000000001, 6.0499999999999945, 15.149999999999991, 6.399999999999997, 10.049999999999994),
            Block.box(6.849999999999999, 6.5, 1.8499999999999934, 9.149999999999999, 9.699999999999985, 4.0500000000000025),
            Block.box(1.7499999999999991, 6.5, 6.95000000000001, 4.049999999999999, 9.699999999999985, 9.150000000000018),
            Block.box(12.15, 6.5, 6.9499999999999815, 14.450000000000001, 9.699999999999985, 9.14999999999999)
    ).reduce((v1, v2) -> Shapes.join(v1, v2, BooleanOp.OR)).get();

    @Override
    public VoxelShape getShape(BlockState pState, BlockGetter pLevel, BlockPos pPos, CollisionContext pContext) {
        switch (pState.getValue(FACING)) {
            case NORTH:
                return SHAPE_N;
            case SOUTH:
                return SHAPE_S;
            case WEST:
                return SHAPE_W;
            case EAST:
                return SHAPE_E;
            default:
                return SHAPE_N;
        }
    }





    public RenderShape getRenderShape(BlockState pState) {
        return RenderShape.MODEL;
    }





    public BlockState rotate(BlockState pState, Rotation pRotation) {
        return pState.setValue(FACING, pRotation.rotate(pState.getValue(FACING)));
    }


    public BlockState mirror(BlockState pState, Mirror pMirror) {
        return pState.rotate(pMirror.getRotation(pState.getValue(FACING)));
    }



    public boolean propagatesSkylightDown(BlockState p_49928_, BlockGetter p_49929_, BlockPos p_49930_) {
        return true;
    }


    public float getShadeBrightness(BlockState p_60472_, BlockGetter p_60473_, BlockPos p_60474_) {
        return 1.0F;
    }


    public PushReaction getPistonPushReaction(BlockState pState) {
        return PushReaction.DESTROY;
    }
}


























